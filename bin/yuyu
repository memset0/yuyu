#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const YAML = require('yaml');
const chalk = require('chalk');
const commander = require('commander');

const config = YAML.parse(fs.readFileSync(path.join(__dirname, '../src/config.yml')).toString());
const package = JSON.parse(fs.readFileSync(path.join(__dirname, '../package.json')).toString());
const lib = {
	www: require('../script/www'),
	local: require('../script/local'),
	cmdtools: require('../script/cmdtools'),
};

function log(command, dialog) {
	let spliter = '============================================================';
	console.log(
		chalk.grey(spliter) + '\n' +
		'  ' + chalk.greenBright(`yuyu@${package.version}`) + ' -> ' + chalk.blueBright(command) + '\n' +
		'  ' + dialog + '\n' +
		chalk.grey(spliter) + '\n');
}

commander.command('server')
	.option('-p, --port <int>', 'port for server')
	.action(function (option) {
		let port = option.port ? option.port : 3000;
		log('server', `server is running on http://localhost:${port}`);
		lib.www(port);
	})

commander.command('generate')
	.action(function (option) {
		log('generate', 'generate static files');
		lib.local();
	})

commander.command('edit <uri>')
	.action(function (option) {
		lib.cmdtools.edit(option);
	});

if (require.main == module) {
	commander.parse(process.argv);
}